// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/RootVG.shared.kt
// Package: com.lightningkite.khrysaliswebsite.vg
import { comLightningkiteKhrysalisViewsAndroidSwapViewBindStack } from 'khrysalis/dist/observables/binding/SwapView.binding.actual'
import { ViewGenerator } from 'khrysalis/dist/views/ViewGenerator.shared'
import { TabsVG } from './TabsVG.shared'
import { ObservableStack } from 'khrysalis/dist/observables/ObservableStack.shared'
import { RootXml } from '../layout/RootXml'

//! Declares com.lightningkite.khrysaliswebsite.vg.RootVG
export class RootVG extends ViewGenerator {
    public constructor() {
        super();
        this.dialog = new ObservableStack();
        this.root = new ObservableStack();
        this.root.reset(new TabsVG(this.root));
    }
    
    
    public readonly dialog: ObservableStack<ViewGenerator>;
    
    public readonly root: ObservableStack<ViewGenerator>;
    
    
    //! Declares com.lightningkite.khrysaliswebsite.vg.RootVG.title
    public get title(): string { return "Root"; }
    
    
    public generate(dependency: Window): HTMLElement {
        const xml = new RootXml();
        
        const view = xml.setup(dependency);
        
        
        //--- Set Up xml.rootStackHolder (overwritten on flow generation)
        comLightningkiteKhrysalisViewsAndroidSwapViewBindStack(xml.rootStackHolder, dependency, this.root);
        
        //--- Set Up xml.dialogStackHolder (overwritten on flow generation)
        comLightningkiteKhrysalisViewsAndroidSwapViewBindStack(xml.dialogStackHolder, dependency, this.dialog);
        
        //--- Generate End (overwritten on flow generation)
        
        return view;
    }
    
    //--- Init
    
    
    
    //--- Actions
    
    
    //--- Body End
}

